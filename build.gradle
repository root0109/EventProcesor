allprojects {
    apply plugin: 'java'
    apply plugin: 'war'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileJava { 
  options.encoding = "UTF-8" 
}

defaultTasks 'clean', 'build'

/* declaring local variables within this script */

def warName = 'EventProcessor'
def targetLocation = 'build/target'
def resourcesDir = 'Resources'

sourceSets
{
main
{
	java
	{
		srcDir 'src'
		output.classesDir = 'WebContent/WEB-INF/classes'
	}
}
}

repositories{
    mavenCentral()
}

dependencies {
		compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.8.1' , transitive: false
		compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1' , transitive: false
		compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1', transitive: false
		compile group: 'org.apache.logging.log4j', name: 'log4j-iostreams', version: '2.8.1', transitive: false
		compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.8.1', transitive: false
		compile group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.8.1', transitive: false
		compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25', transitive: false
		compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25', transitive: false
		compile group: 'org.slf4j', name: 'slf4j-ext', version: '1.7.25', transitive: false
		compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25', transitive: false
		compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.25', transitive: false
		compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25', transitive: false
		compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21', transitive: false
		compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.10.2.0', transitive: false
		compile group: 'org.apache.kafka', name: 'kafka_2.10', version: '0.10.2.0', transitive: false
		compile group: 'org.scala-lang', name: 'scala-library', version: '2.10.6', transitive: false
		compile group: 'com.101tec', name: 'zkclient', version: '0.10', transitive: false
		compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '3.2.0', transitive: false
		compile group: 'com.google.guava', name: 'guava', version: '19.0', transitive: false
		compile group: 'io.netty', name: 'netty-all', version: '4.0.39.Final', transitive: false
		compile group: 'com.yammer.metrics', name: 'metrics-core', version: '2.2.0', transitive: false
		compile group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.4.9', transitive: false
		compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '3.1.0', transitive: false
		compile group: 'commons-logging', name: 'commons-logging', version: '1.2', transitive: false
		compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0', transitive: false
		compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
		compile group: 'org.slf4j', name: 'slf4j-jcl', version: '1.7.25'
		compile files('../IGPUtils/igp-utils.jar')
		
		providedCompile files('CompileLib/javax.servlet-api-3.0.1.jar')
		/*  use this in gradle 2.12 version  ->	compileOnly 'javax.servlet:servlet-api:3.0' */
	 }

war
{
	delete targetLocation + warName + ".war" 
	println '--------------- Old EventProcessor.war is deleted which was present at :'+ targetLocation + warName + '.war' 
	/* make sures everytime new war file is created can be added in any of the required tasks */
	outputs.upToDateWhen { false }
	exclude 'WEB-INF/lib/*'
	includeEmptyDirs = false
	baseName warName
	/*The directory where the war is generated into. */
	destinationDir = file(targetLocation)
}

task copyJars(type: Copy) {
    /*from configurations.testRuntime    . the runtime configuration includes all of the compile time dependencies */
    from configurations.runtime
    into 'WebContent/WEB-INF/lib'
}   

task buildAll {
	outputs.upToDateWhen { false }
	tasks.war.execute()
    println '---------------[EventProcessor.war] has been created successfully.---------------'
    tasks.copyJars.execute()
    println '---------------[EventProcessor] libs have been copied successfully in WebContent/WEB-INF/lib ---------------'
}
